on:
  push:
    branches:
      - main
      
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.PAT }}
          release-type: node
          package-name: release-please-action
          config-file: release-please-config.json
      - uses: actions/checkout@v2
        # these if statements ensure that a publication only occurs when
        # a new release is created:
        if: ${{ steps.release.outputs.release_created }}
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          token: ${{secrets.PAT}} # use a personal acces token so that other actions can trigger
          ref: main
      # update the manifest.json with the tag version
      - name: Update manifest version
        uses: jossef/action-set-json-field@v1
        if: ${{ steps.release.outputs.release_created }}
        with:
          file: manifest.json
          field: version
          value: ${{ steps.release.outputs.tag_name }}
      - name: Commit manifest
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git branch --show-current
          git add manifest.json
          git status
          git commit -m updateVersion
          git pull
      # push the commit
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        if: ${{ steps.release.outputs.release_created }}
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          branch: main
          
      - name: Build
        id: build
        if: ${{ steps.release.outputs.release_created }}
        run: |
          npm install
          npm run build
          mkdir ${{ env.PLUGIN_NAME }}
          cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
          ls
          echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"

      - name: Upload zip file
        id: upload-zip
        uses: actions/upload-release-asset@v1
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip
          asset_content_type: application/zip

      - name: Upload main.js
        id: upload-main
        uses: actions/upload-release-asset@v1
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./main.js
          asset_name: main.js
          asset_content_type: text/javascript

      - name: Upload manifest.json
        id: upload-manifest
        uses: actions/upload-release-asset@v1
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json

      - name: Upload styles.css
        id: upload-css
        uses: actions/upload-release-asset@v1
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./styles.css
          asset_name: styles.css
          asset_content_type: text/css
